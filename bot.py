# bot.py
import asyncio
import os
import logging
from dotenv import load_dotenv
import re
from pathlib import Path
from datetime import datetime
from zoneinfo import ZoneInfo  # Python 3.9+

from aiogram import Bot, Dispatcher, F
from aiogram.types import Message, ChatMember, FSInputFile, Document
from aiogram.enums import ParseMode
from aiogram.client.default import DefaultBotProperties
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.exceptions import TelegramBadRequest
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from fileHandler import process_excel

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–≥–µ—Ä
logger = logging.getLogger()
logger.setLevel(logging.INFO)

# –§–æ—Ä–º–∞—Ç –ª–æ–≥–æ–≤
formatter = logging.Formatter("%(asctime)s [%(levelname)s] %(message)s")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ñ–∞–π–ª–∞
file_handler = logging.FileHandler("bot.log")
file_handler.setFormatter(formatter)
logger.addHandler(file_handler)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ç–µ—Ä–º–∏–Ω–∞–ª–∞
console_handler = logging.StreamHandler()
console_handler.setFormatter(formatter)
logger.addHandler(console_handler)

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ .env
BOT_TOKEN = os.getenv("BOT_TOKEN")
if not BOT_TOKEN:
    raise ValueError("BOT_TOKEN not set in .env file")

# –ü–æ–ª—É—á–∞–µ–º id –≥—Ä—É–ø–ø—ã –∏–∑ .env
CHANNEL_USERNAME = os.getenv("CHANNEL_USERNAME")
if not CHANNEL_USERNAME:
    raise ValueError("CHANNEL_USERNAME not set in .env file")

FILENAME_PATTERN = re.compile(
    r"^–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –æ–±–æ—Ä–æ—Ç–Ω–æ-—Å–∞–ª—å–¥–æ–≤–∞—è –≤–µ–¥–æ–º–æ—Å—Ç—å \d{2}\.\d{2}\.\d{4} \d{2}\.\d{2}\.\d{2}\.xlsx$"
)

START_MESSAGE = f"""üëã –ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî –±–æ—Ç CalcPro. –ü–æ–º–æ–≥–∞—é –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –û–±–æ—Ä–æ—Ç–Ω–æ-—Å–∞–ª—å–¥–æ–≤—É—é –≤–µ–¥–æ–º–æ—Å—Ç—å (–û–°–í) –∏–∑ iiko –∏ –Ω–∞–π—Ç–∏ –ø–æ–∑–∏—Ü–∏–∏ —Å –∏–∑–ª–∏—à–∫–∞–º–∏ –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç–∞—á–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–µ–≤—ã—à–∞—é—Ç –¥–æ–ø—É—Å—Ç–∏–º—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç –æ—Ç –æ–±–æ—Ä–æ—Ç–∞ —Ç–æ–≤–∞—Ä–∞.

üìä –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:

1. –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª @iiko_obuchenie_CalcPro (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ —É—Å–ª–æ–≤–∏–µ)

2. –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª –û–°–í - –ø–µ—á–∞—Ç–Ω–∞—è —Ñ–æ—Ä–º–∞ "–ü–µ—á–∞—Ç—å —Å –Ω–∞–ª–æ–≥–∞–º–∏" (—Ñ–æ—Ä–º–∞—Ç .xls)

3. –£–∫–∞–∂–∏—Ç–µ –¥–æ–ø—É—Å—Ç–∏–º—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –±–µ–∑ –∑–Ω–∞–∫–∞ % (–Ω–∞–ø—Ä–∏–º–µ—Ä: 2.0)

  ‚ñ´Ô∏è –ï—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞—Ç—å –∏ –Ω–∞–ø–∏—Å–∞—Ç—å –±–æ—Ç—É —Å–ª–æ–≤–æ "–ù–µ—Ç" ‚Äî —Ç–æ–≥–¥–∞ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 3.5 

4. –ü–æ–ª—É—á–∏—Ç–µ –æ–±—Ä–∞—Ç–Ω–æ —Ñ–∞–π–ª —Å –≤—ã–¥–µ–ª–µ–Ω–Ω—ã–º–∏ —Å—Ç—Ä–æ–∫–∞–º–∏, –≥–¥–µ –¥–æ–ø—É—â–µ–Ω—ã –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è

üé• –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—é –æ—Ç—á–µ—Ç–∞ ‚Äî –≤ –ø–æ—Å—Ç–µ (https://t.me/iiko_obuchenie_CalcPro/39)"""

END_MESSAGE = """üìä –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à—ë–Ω!


–í–æ—Ç –≤–∞—à –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π —Ñ–∞–π–ª –û–°–í —Å –≤—ã–¥–µ–ª–µ–Ω–∏–µ–º –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–π:

üî∑ –ì–æ–ª—É–±—ã–º —Ü–≤–µ—Ç–æ–º –æ—Ç–º–µ—á–µ–Ω—ã –ø–æ–∑–∏—Ü–∏–∏ —Å –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ–º –ø–æ –∏–∑–ª–∏—à–∫–∞–º

üî¥ –†–æ–∑–æ–≤—ã–º —Ü–≤–µ—Ç–æ–º ‚Äî –ø–æ–∑–∏—Ü–∏–∏ —Å –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ–º –ø–æ –Ω–µ–¥–æ—Å—Ç–∞—á–∞–º


üìå –¶–≤–µ—Ç–æ–≤–∞—è –ø–æ–¥—Å–≤–µ—Ç–∫–∞ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —Ç–æ, —á—Ç–æ –∑–Ω–∞—á–µ–Ω–∏—è –æ—Ç–∫–ª–æ–Ω—è—é—Ç—Å—è –æ—Ç –¥–æ–ø—É—Å—Ç–∏–º–æ–≥–æ –ø–æ—Ä–æ–≥–∞, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —É–∫–∞–∑–∞–ª–∏ (–∏–ª–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é ‚Äî 3.5%).

üéØ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –æ–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —ç—Ç–∏ —Å—Ç—Ä–æ–∫–∏ ‚Äî –æ–Ω–∏ –º–æ–≥—É—Ç —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞ –æ—à–∏–±–∫–∏ –≤ —É—á—ë—Ç–µ, –ø–µ—Ä–µ—Å–æ—Ä—Ç–∏—Ü—É –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –∏–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏–µ–π.

–ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å —Å —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–æ–π –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–π –∏–ª–∏ –∞—É–¥–∏—Ç–æ–º ‚Äî –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º, –ø–æ–º–æ–∂–µ–º —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è!"""

# --- FSM –°–æ—Å—Ç–æ—è–Ω–∏—è ---
class FileProcessing(StatesGroup):
    waiting_for_percentage = State()
    waiting_for_file = State()

# --- –û—Å–Ω–æ–≤–Ω–æ–π —Ö–µ–Ω–¥–ª–µ—Ä –Ω–∞ —Ñ–∞–π–ª ---
async def handle_document(message: Message, state: FSMContext):
    document: Document = message.document

    user_id = message.from_user.id
    if not await check_subscription(message.bot, user_id):
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º.")
        return


    if document.file_size > 1 * 1024 * 1024:
        await message.answer("–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä ‚Äî 1 –ú–ë.")
        return


    file = await message.bot.get_file(document.file_id)
    file_path = f"temp/{document.file_name}"
    await message.bot.download_file(file.file_path, destination=file_path)

    await state.update_data(file_path=file_path, file_name=document.file_name)
    await message.answer(
        "–í–∞—à —Ñ–∞–π–ª –ø—Ä–∏–Ω—è—Ç –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏.\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –¥–æ–ø—É—Å—Ç–∏–º—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è. –ù–∞–ø—Ä–∏–º–µ—Ä:\n"
        "`4.5` –∏–ª–∏ `2.0`\n\n"
        "–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (3.5%), –æ—Ç–ø—Ä–∞–≤—å—Ç–µ `–ù–µ—Ç` (–±–µ–∑ —Ç–æ—á–∫–∏).",
        parse_mode=ParseMode.MARKDOWN
    )
    await state.set_state(FileProcessing.waiting_for_percentage)

# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ—Ü–µ–Ω—Ç–∞ ---
async def handle_percentage(message: Message, state: FSMContext):
    user_input = message.text.strip().lower()
    data = await state.get_data()
    file_path = data["file_path"]
    file_name = data["file_name"]

    try:
        if user_input == "–Ω–µ—Ç":
            percentage = 0.035
        else:
            percentage = float(user_input.replace(",", ".")) / 100.0
    except ValueError:
        await message.answer("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä \"4.5\" –∏–ª–∏ \"–ù–µ—Ç\".")
        return

    # output_path = f"temp/processed_{file_name}"

    # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –∏–º—è –≤–∏–¥–∞: temp/[YYYY-MM-DD_HH-MM-SS] –ò–º—è–§–∞–π–ª–∞.xlsx
    stem = Path(file_name).stem
    ts = datetime.now(ZoneInfo("Asia/Almaty")).strftime("%Y-%m-%d_%H-%M-%S")
    output_name = f"[{ts}] {stem}.xlsx"
    output_path = str(Path("temp") / output_name)

    await message.answer("–ò–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")

    try:
        process_excel(file_path, output_path, allowed_deviation_percentage=percentage)
        await message.answer_document(FSInputFile(output_path), caption=END_MESSAGE)
    except Exception as e:
        logging.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞:")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞.")

    await state.clear()

async def check_subscription(bot: Bot, user_id: int) -> bool:
    try:
        member: ChatMember = await bot.get_chat_member(chat_id=CHANNEL_USERNAME, user_id=user_id)
        return member.status in ("member", "administrator", "creator")
    except TelegramBadRequest:
        return False  # –Ω–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–∞–Ω–∞–ª–µ

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def cmd_start(message: Message):
    logging.info(f"–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è id={message.from_user.id}")
    await message.answer(START_MESSAGE)

async def cmd_help(message: Message):
    await message.answer(START_MESSAGE)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /check
async def check_user_subscription(message: Message, bot: Bot):
    user_id = message.from_user.id
    logging.info(f"–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /check –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è id={user_id}")
    if await check_subscription(bot, user_id):
        await message.answer("–í—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª. –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ñ–∞–π–ª –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É.")
    else:
        await message.answer("–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª.")

def is_valid_filename(filename: str) -> bool:
    return bool(FILENAME_PATTERN.match(filename))

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async def main():
    bot = Bot(token=BOT_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
    # await bot.delete_webhook(drop_pending_updates=True)

    dp = Dispatcher(storage=MemoryStorage())
    dp.message.register(cmd_start, F.text == "/start")
    dp.message.register(check_user_subscription, F.text == "/check")
    dp.message.register(cmd_help, F.text == "/help")
    dp.message.register(handle_document, F.document)
    dp.message.register(handle_percentage, F.text, FileProcessing.waiting_for_percentage)

    os.makedirs("temp", exist_ok=True)
    logging.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.")
    await dp.start_polling(bot)

# –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    asyncio.run(main())
